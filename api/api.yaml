openapi: 3.0.1
info:
  version: '1.0.0'
  title: HackerNews
  description: "Open API of HackerNews ASW Project by Adrian Alvarez,Marcel Costa, Luis Belloso, Sergio Pascual, Xavier Espinos"
servers:
  - url: 'http://52.207.235.212:8080'
paths:

  /users:
    post:
      summary: Create new user
      description: Crete new user
      tags: 
      - Users
      parameters: 
      - name: name
        in: path
        description: Nom de l'usuari
        required: true
        schema:
          type: string
          format: string
      - name: email
        in: path
        description: Mail de l'usuari
        required: true
        schema:
          type: string
          format: string
      - name: password
        in: path
        description: Password de l'usuari
        required: true
        schema:
          type: string
          format: string
      - name: password_confirmation
        in: path
        description: Verificacio de l'usuari
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithoutDetails'
                
  /users/{id}:
    get:
      summary: Show an User
      description: Return information of userId
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: id from user
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update an user
      description: Return information of userId
      tags:
      - Users
      parameters:
      - name: id
        in: path
        description: id from user
        required: true
        schema:
          type: integer
          format: int32
      - name: description
        in: path
        description: new description for user
        required: true
        schema:
          type: string
          format: string
      - name: apiKey
        in: path
        description: apiKey of the user
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /contribucions:
    get:
      summary: All Contribution
      description: Returns all contributions that are contains content
      tags:
      - Contributions
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'
                  
    post:
      summary: New contribution
      description: Lets create a contribution
      tags: 
      - Contributions
      parameters: 
      - name: title
        in: path
        description: Titol de la contribucio
        required: true
        schema:
          type: string
          format: string
      - name: url
        in: path
        description: url de la contribucio
        required: true
        schema:
          type: string
          format: string
      - name: text
        in: path
        description: text de la contribucio
        required: true
        schema:
          type: string
          format: string
      - name: apiKey
        in: path
        description: api de l'usuari
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
        404:
          description: Method not found

  /contribucions/ask:
    get:
      summary: All Ask Contributions
      description: Returns all contributions that are tipe ask
      tags:
      - Contributions
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'
                  
  /contribucions/news:
    get:
      summary: All News Contributions
      description: Returns all contributions that are tipe new
      tags:
      - Contributions
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'
                  
  /contribucions/{id}:
    get:
      summary: Show a Contribution
      description: Returns a contribution
      tags:
      - Contributions
      parameters: 
      - name: id
        in: path
        description: id from contribution
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
                
    delete:
      summary: Deletes a Contribution
      description: Deletes a contribution
      tags:
      - Contributions
      parameters: 
      - name: id
        in: path
        description: id from contribution
        required: true
        schema:
          type: integer
          format: int32
      - name: apiKey
        in: path
        description: api de l'usuari
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'

    post:
      summary: Create a new comment
      description: Create new comment
      tags: 
      - Contributions
      parameters: 
      - name: id
        in: path
        description: id from contribution
        required: true
        schema:
          type: integer
          format: int32
      - name: content
        in: path
        description: content of comment
        required: true
        schema:
          type: string
          format: string
      - name: apiKey
        in: path
        description: api de l'usuari
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
  
  /comentaris/{id}:
    
    get:
      summary: Show a comment
      description: Shows a comment
      tags: 
      - Comments
      parameters: 
      - name: id
        in: path
        description: ID from comment
        required: true
        schema:
          title: integer
          format: int32
      - name: content
        in: path
        description: content of comment
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
    
    post:
      summary: Create a comment
      description: Shows a comment
      tags: 
      - Comments
      parameters: 
      - name: id
        in: path
        description: ID from comment
        required: true
        schema:
          title: integer
          format: int32
      - name: content
        in: path
        description: content of comment
        required: true
        schema:
          type: string
          format: string
      - name: apiKey
        in: path
        description: api from user
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'

  /contribucions/{id}/comentaris:
    get:
      summary: All Comments from contribution
      description: Returns all coments from contribution id
      tags:
      - Contributions
      parameters: 
      - name: id
        in: path
        description: id from user
        required: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
  
  /contribucions/{id}/vote:
    put:
      summary: Vote a contribution
      description: Increments number of votes from a contribution
      tags:
      - Contributions
      parameters:
      - name: id
        in: path
        description: id from user
        required: true
        schema:
          type: integer
          format: int32
      - name: apiKey
        in: query
        description: apiKey of the user, showd correspond with the id
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'

  /contribucions/{id}/downvote:
    put:
      summary: Vote a contribution
      description: Increments number of votes from a contribution
      tags:
      - Contributions
      parameters:
      - name: id
        in: path
        description: id from user
        required: true
        schema:
          type: integer
          format: int32
      - name: apiKey
        in: query
        description: apiKey of the user, showd correspond with the id
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
  /comentaris/user/{id}:
    get:
      summary: Get all comments from user
      description: Get all comments from user id
      tags: 
      - Users
      parameters: 
      - name: id
        in: path
        description: id from user
        schema:
          type: integer
          format: int32
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
                  
  /contribucions/user/{id}:
    get:
      summary: Get all contributions from user
      description: Get all comments from user id
      tags: 
      - Users
      parameters: 
      - name: id
        in: path
        description: id from user
        schema:
          type: integer
          format: int32
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'

components:
  schemas:
    UserWithoutDetails:
      type: object
      properties:
        id:
          type: number
          format: int32
          description: Unique identifier for the user
        email:
          type: string
          description: email of the user
        apiKey:
          type: string
          description: secret apiKey of the user
    
    Comment:
      type: object
      properties:
        text:
          type: string
          format: string
          description: content of the comment
        contribution_id:
          type: number
          format: int32
          description: Identifier from contribution
        comentari_id:
          type: number
          format: int32
          description: Unique identifier for the comment
        user_id:
          type: number
          format: int32
          description: Identifier from contribution
        timestamp:
          type: string
          description: Datetime when the comment was created
        points:
          type: number
          description: Number of points the comment has
          
    User:
      type: object
      properties:
        id:
          type: number
          format: int32
          description: Unique identifier for the user
        username:
          type: string
          description: Username of the user
        email:
          type: string
          description: email of the user
        about:
          type: string
          description: about
        timestamp:
          type: string
          description: Datetime when the user was created
    
    Contribution:
      type: object
      properties:
        id:
          type: number
          format: int32
          description: Unique identifier for the submission
        user_id:
          type: number
          format: int32
          description: Identifier from contribution
        title:
          type: string
          description: Name of the submission
        url:
          type: string
          description: adress to the new
        text:
          type: string
          description: Message
        created_at:
          type: string
          description: Datetime when the submission was created
        updated_at:
          type: string
          description: Datetime when the submission was created
        points:
          type: number
          format: int32
          description: Number of points
