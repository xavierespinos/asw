openapi: 3.0.1

info:
  version: '1.0.0'
  title: HackerNews
  description: "Open API of HackerNews ASW Project by Adrian Alvarez,Marcel Costa, Luis Belloso, Sergio Pascual, Xavier Espinos"
servers:
  - url: 'http://127.0.0.1:3000/api'

paths:

  /users:
    put:
      summary: Update an user
      description: Return information of userId
      tags:
        - Users
      requestBody:
        description: Optional description in Markdown
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdated'
      parameters:
        - name: apiKey
          in: header
          description: id from user
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{id}:
    get:
      summary: Show an User
      description: Return information of userId
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: id from user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /contribucions:
    get:
      summary: All Contribution
      description: Returns all contributions that are contains content
      tags:
        - Contributions
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'

    post:
      summary: Add a new Contribution
      tags:
        - Contributions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContributionNew'
      parameters:
        - name: apiKey
          in: header
          description: id from contribution
          required: true
          schema:
            type: string
            format: string

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
        404:
          description: Method not found

  /contribucions/asks:
    get:
      summary: All Ask Contributions
      description: Returns all contributions that are tipe ask
      tags:
        - Contributions
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'

  /contribucions/urls:
    get:
      summary: All urls Contributions
      description: Returns all contributions that are tipe new
      tags:
        - Contributions
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'

  /contribucions/{id}:
    get:
      summary: Show a Contribution
      description: Returns a contribution
      tags:
        - Contributions
      parameters:
        - name: id
          in: path
          description: id from contribution
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'

    delete:
      summary: Deletes a Contribution
      description: Deletes a contribution
      tags:
        - Contributions
      parameters:
        - name: id
          in: path
          description: id from contribution
          required: true
          schema:
            type: integer
            format: int32
        - name: apiKey
          in: header
          description: api de l'usuari
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: successful operation


    post:
      summary: Create a new comment
      description: Create new comment
      tags:
        - Contributions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentNew'
      parameters:
        - name: id
          in: path
          description: id from contribution
          required: true
          schema:
            type: integer
            format: int32
        - name: apiKey
          in: header
          description: api de l'usuari
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'

  /comentaris/{id}:

    get:
      summary: Show a comment
      description: Shows a comment
      tags:
        - Comments
      parameters:
        - name: id
          in: path
          description: ID from comment
          required: true
          schema:
            title: integer
            format: int32
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'

    post:
      summary: Create a reply comment
      description: Shows a comment
      tags:
        - Comments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentNew'
      parameters:
        - name: id
          in: path
          description: ID from comment
          required: true
          schema:
            title: integer
            format: int32
        - name: apiKey
          in: header
          description: api from user
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'

  /comentaris/{id}/replies:
    get:
      summary: All Comments from contribution
      description: Returns all coments from contribution id
      tags:
        - Comments
      parameters:
        - name: id
          in: path
          description: id from user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'

  /contribucions/{id}/comentaris:
    get:
      summary: All Comments from contribution
      description: Returns all coments from contribution id
      tags:
        - Comments
      parameters:
        - name: id
          in: path
          description: id from user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'

  /contribucions/{id}/vote:
    put:
      summary: Vote a contribution
      description: Increments number of votes from a contribution
      tags:
        - Contributions
      parameters:
        - name: id
          in: path
          description: id from user
          required: true
          schema:
            type: integer
            format: int32
        - name: apiKey
          in: query
          description: apiKey of the user, showd correspond with the id
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'

  /contribucions/{id}/downvote:
    put:
      summary: Vote a contribution
      description: Increments number of votes from a contribution
      tags:
        - Contributions
      parameters:
        - name: id
          in: path
          description: id from user
          required: true
          schema:
            type: integer
            format: int32
        - name: apiKey
          in: query
          description: apiKey of the user, showd correspond with the id
          required: true
          schema:
            type: string
            format: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
  /comentaris/user/{id}:
    get:
      summary: Get all comments from user
      description: Get all comments from user id
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: id from user
          schema:
            type: integer
            format: int32
          required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'

  /contribucions/user/{id}:
    get:
      summary: Get all contributions from user
      description: Get all comments from user id
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: id from user
          schema:
            type: integer
            format: int32
          required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'

components:
  schemas:
    UserWithoutDetails:
      type: object
      properties:
        id:
          type: number
          format: int32
          description: Unique identifier for the user
        email:
          type: string
          description: email of the user
        apiKey:
          type: string
          description: secret apiKey of the user

    Comment:
      type: object
      properties:
        id:
          type: number
          format: int
          description: id of the comment
        text:
          type: string
          format: string
          description: content of the comment
        contribution_id:
          type: number
          format: int32
          description: Identifier from contribution
        comentari_id:
          type: number
          format: int32
          description: Unique identifier for the comment
        user_id:
          type: number
          format: int32
          description: Identifier from contribution
        created_at:
          type: string
          description: Datetime when the comment was created
        updated_at:
          type: string
          description: Datetime when the comment was created
        points:
          type: number
          description: Number of points the comment has

    User:
      type: object
      properties:
        id:
          type: number
          format: int32
          description: Unique identifier for the user
        username:
          type: string
          description: Username of the user
        email:
          type: string
          description: email of the user
        about:
          type: string
          description: about
        timestamp:
          type: string
          description: Datetime when the user was created

    Contribution:
      type: object
      properties:
        id:
          type: number
          format: int32
          description: Unique identifier for the submission
        user_id:
          type: number
          format: int32
          description: Identifier from contribution
        title:
          type: string
          description: Name of the submission
        url:
          type: string
          description: adress to the new
        text:
          type: string
          description: Message
        created_at:
          type: string
          description: Datetime when the submission was created
        updated_at:
          type: string
          description: Datetime when the submission was created
        points:
          type: number
          format: int32
          description: Number of points

    ContributionNew:
      type: object
      properties:
        title:
          type: string
          description: Title of the Contribution
        url:
          type: string
          description: URL
        text:
          type: string
          description: Message

    CommentNew:
      type: object
      properties:
        text:
          type: string
          description: text comment

    UserUpdated:
      type: object
      properties:
        name:
          type: string
          description: email of the user
        description:
          type: string
          description:  of the user